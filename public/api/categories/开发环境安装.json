{"name":"开发环境安装","slug":"开发环境安装","count":4,"postlist":[{"title":"ALC_Sentry","slug":"ALC-Sentry","date":"2018-07-24T08:06:55.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/ALC-Sentry.json","excerpt":"<p>1) 安装环境<br>执行命令创建名为sentry的数据库<br>createdb -E utf-8 sentry<br>为sentry项目初始化数据<br>sentry –config=~/.sentry/sentry.conf.py upgrade<br>创建新用户<br>sentry –config=~/.sentry/sentry.conf.py createuser<br>然后就可以启动服务了<br>sentry –config=~/.sentry/sentry.conf.py start<br>另外，还需要启动Worker<br>sentry –config=~/.sentry/sentry.conf.py celery worker -B<br>假设web服务器端口是9000，那么访问localhost:9000就能开始使用sentry了！</p>\n<p>source /usr/local/vir-sentry/bin/activate<br>sentry –config=~/.sentry/sentry.conf.py start &gt;&gt; /usr/local/vir-sentry/logs/sentry.log 2&gt;&amp;1 &amp;<br>","keywords":null,"cover":"9E26651338B7EE1345DAFDEF0ADDB9C4.jpg","content":null,"text":"1) 安装环境<br>执行命令创建名为sentry的数据库<br>createdb -E utf-8 sentry<br>为sentry项目初始化数据<br>sentry –config=~/.sentry/sentry.conf.py upgrade<br>创建新用户<br>s","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"Sentry","slug":"Sentry","count":1,"path":"api/tags/Sentry.json"}]},{"title":"alchemist_manage服务器部署","slug":"alchemist-manage服务器部署","date":"2018-07-11T08:55:25.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/alchemist-manage服务器部署.json","excerpt":"<ol>\n<li>manage服务器代码上传<br>copy srpg_too 目录到 /var/webapps/alchemist_mnt    (文件所有者必须为webapp)</li>\n<li>ruby运行环境构建<br>2.1 检查依赖<br>-ruby(v2.2.2p95~)<br>-gem bundle<br>-Node.js<br>-npm<br>-bower<br>-msyql<br>-redis<br>2.1 设置gem源为淘宝源<br>Gemfile （描述gem之间依赖文件）需要如下修改<br>source ‘<a href=\"https://gems.ruby-china.org/&#39;\" target=\"_blank\" rel=\"noopener\">https://gems.ruby-china.org/&#39;</a><br>2.2  安装gem file<br>su  - webapp<br>bundle install<br>2.2.1 安装bundle 命令不存在，。<br>gem install bundle<br>2.2.2 提示gem命令不存在，就执行rbenv global 2.2.2， 如果无法运行就重新安装ruby 2.2.2 版本，流程如下<br>su - webapp<br>git clone <a href=\"https://github.com/rbenv/rbenv.git\" target=\"_blank\" rel=\"noopener\">https://github.com/rbenv/rbenv.git</a> ~/.rbenv<br>cd ~/.rbenv &amp;&amp; src/configure &amp;&amp; make -C src<br>echo ‘export PATH=”$HOME/.rbenv/bin:$PATH”‘ &gt;&gt; ~/.bash_profile<br>~/.rbenv/bin/rbenv init<br>echo ‘eval “$(rbenv init -)”‘ &gt;&gt; ~/.bash_profile<br>source ~/.bash_profile<br>git clone <a href=\"https://github.com/rbenv/ruby-build.git\" target=\"_blank\" rel=\"noopener\">https://github.com/rbenv/ruby-build.git</a> ~/.rbenv/plugins/ruby-build<br>rbenv install 2.2.2<br>rbenv global 2.2.2<br>ruby -v","keywords":null,"cover":"AADD68F1E0BFC2CE65796C5F7EEBD67E.jpg","content":null,"text":"manage服务器代码上传<br>copy srpg_too 目录到 /var/webapps/alchemist_mnt    (文件所有者必须为webapp)ruby运行环境构建<br>2.1 检查依赖<br>-ruby(v2.2.2p95~)<br>-gem bundle<","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"Ruby on Rails","slug":"Ruby-on-Rails","count":1,"path":"api/tags/Ruby-on-Rails.json"},{"name":"Capistrano 自动部署工具","slug":"Capistrano-自动部署工具","count":1,"path":"api/tags/Capistrano-自动部署工具.json"}]},{"title":"hexo 常用笔记","slug":"hexo-安装遇到的问题","date":"2018-07-03T09:39:12.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/hexo-安装遇到的问题.json","excerpt":"","keywords":null,"cover":null,"content":"<p>建站的过程网上一大把就不记录了，主要写下遇到的几个问题</p>\n<ol>\n<li>github上的项目名称一定要和自己在github上的用户名一致，否则会生成静态文件后点开会白屏</li>\n<li>多看看官方手册上面有详细记录<a href=\"https://hexo.io/zh-cn/docs\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs</a></li>\n</ol>\n<p>hexo g -d<br>hexo clean<br>hexo s<br>hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件,再运行hexo n “xxxx”来生成md博文</p>\n","text":"建站的过程网上一大把就不记录了，主要写下遇到的几个问题github上的项目名称一定要和自己在github上的用户名一致，否则会生成静态文件后点开会白屏多看看官方手册上面有详细记录https://hexo.io/zh-cn/docshexo g -d<br>hexo clean<b","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"node.js","slug":"node-js","count":3,"path":"api/tags/node-js.json"},{"name":"hexo","slug":"hexo","count":1,"path":"api/tags/hexo.json"}]},{"title":"项目各种配置文件","slug":"项目各种配置文件","date":"2018-07-31T08:43:21.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/项目各种配置文件.json","excerpt":"<ol>\n<li>srpg.conf<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    listen 443 ssl;</span><br><span class=\"line\"><span class=\"comment\">#    server_name alctwobt.ssl.91dena.cn;</span></span><br><span class=\"line\">    server_name alccn2-release.ssl.91dena.cn;</span><br><span class=\"line\"><span class=\"comment\">#    ssl on;</span></span><br><span class=\"line\">    ssl_certificate /root/cert/91dena_cn.pem;</span><br><span class=\"line\">    ssl_certificate_key /root/cert/91dena_cn.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    proxy_set_header Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">## APP  11</span></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        <span class=\"comment\"># proxy</span></span><br><span class=\"line\">        proxy_pass http://127.0.0.1:5000/;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"comment\"># connect to backend with keepalives</span></span><br><span class=\"line\"></span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">        proxy_set_header Connection <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        proxy_send_timeout 30s;</span><br><span class=\"line\">        proxy_read_timeout 60s;</span><br><span class=\"line\">        proxy_connect_timeout 30s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    access_log  /home/<span class=\"built_in\">log</span>/nginxlog/cnrelease/alccn2.ssl.91dena.cn.access.log main;</span><br><span class=\"line\">    error_log   /home/<span class=\"built_in\">log</span>/nginxlog/cnrelease/alccn2.ssl.91dena.cn.error.log;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"/download/nginx.conf\">点击下载</a><br>","keywords":null,"cover":null,"content":null,"text":"srpg.conf1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"},{"name":"td-agent","slug":"td-agent","count":1,"path":"api/tags/td-agent.json"}]}]}