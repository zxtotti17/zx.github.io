{"total":20,"pageSize":10,"pageCount":2,"data":[{"title":"Mysql笔记","slug":"Mysql笔记","date":"2018-10-31T07:04:42.000Z","updated":"2020-06-21T08:14:59.952Z","comments":true,"path":"api/articles/Mysql笔记.json","excerpt":"<p>第1章 SQL基础<br>1.数据分为DDL(数据定义语言)，DML(数据操纵语言)，DCL(数据控制语言)<br>    1.1 DDL语句<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">create database test1;</span><br><span class=\"line\">use test1;</span><br><span class=\"line\">show tables;   \t\t\t\t\t\t\t\t<span class=\"comment\">#查看所有表</span></span><br><span class=\"line\">drop database test1;</span><br><span class=\"line\">create table emp(ename varchar(10),hiredate date,sal decimal(2,10),deptno int(2));</span><br><span class=\"line\">desc emp;\t\t\t\t\t\t\t\t\t<span class=\"comment\">#查看表信息</span></span><br><span class=\"line\">show create table emp \\G;\t\t\t\t\t<span class=\"comment\">#\\G使得记录能够按照字段竖向排列 以便显示更长内容</span></span><br><span class=\"line\">drop table emp;</span><br><span class=\"line\">alter table emp modify ename varchar(20);\t<span class=\"comment\">#修改表字段</span></span><br><span class=\"line\">alter table emp add column age int(3);\t\t<span class=\"comment\">#添加字段</span></span><br><span class=\"line\">alter table emp drop colum age\t\t\t\t<span class=\"comment\">#删除字段</span></span><br><span class=\"line\">alter table emp change age age123 int(4);\t<span class=\"comment\">#字段改名同时修改类型</span></span><br><span class=\"line\">alter table emp add birth date after ename;\t<span class=\"comment\">#修改字段排列顺序</span></span><br><span class=\"line\">alter table emp rename emp1;</span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":null,"content":null,"text":"第1章 SQL基础<br>1.数据分为DDL(数据定义语言)，DML(数据操纵语言)，DCL(数据控制语言)<br>    1.1 DDL语句<br>    1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<b","link":"","raw":null,"photos":[],"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}]},{"title":"pomelo学习笔记","slug":"pomelo学习笔记","date":"2018-10-23T11:34:45.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/pomelo学习笔记.json","excerpt":"<p>环境<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getBase()\t Application.getBase(); 获取应用程序的基本路径</span><br><span class=\"line\"><span class=\"built_in\">set</span>(setting, val, attach);\t Application.set();  setting:应用程序的配置；val:需要设置的值；attach:是否将设配置应用到程序。设置或返回配置的值。</span><br><span class=\"line\">get(setting)\t Application.get(); setting:应用程序的配置。获取配置的值</span><br><span class=\"line\">enabled(setting)\t Application.enabled(); setting:应用程序的配置。检查配置是否启用</span><br><span class=\"line\">disabled(setting)\t Application.disabled(); setting:应用程序的配置。检查配置是否禁用</span><br><span class=\"line\">enbale(setting)\t Application.enbale(); setting:应用程序的配置。启用配置</span><br><span class=\"line\"><span class=\"built_in\">disable</span>(setting)\t Application.disabled(); setting:应用程序的配置。禁用配置</span><br><span class=\"line\">configure(env,fn,<span class=\"built_in\">type</span>)\tApplication.configure();env:应用环境;fn:回调函数;<span class=\"built_in\">type</span>:服务类型.</span><br></pre></td></tr></table></figure></p>\n<p>初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start()\t Application.start(); 启动应用程序。它会加载默认的组件和启动所有加载的组件。</span><br><span class=\"line\">registerAdmin(moduleId,module,opts)\t Application.registerAdmin();  moduleId:(可选参数)模块id或者有modeule提供的模块Id;module:模块对象或者模块的工程函数;opts:模块构造函数的参数。</span><br><span class=\"line\">filter(filter)\t Application.filter(); filter:provide before and after filter method。add a filter to before and after filter</span><br><span class=\"line\">before(bf)\t Application.before(); bf:before filter。Add before filter</span><br><span class=\"line\">after(af)\t Application.after(); af:after filter。Add after filter</span><br><span class=\"line\">load(name, component, opts)\t Application.load(); name:组件的名称（可选）；component：组件的实例或者组件的工厂函数；opts：组件构造函数的参数（可选）。加载组件</span><br><span class=\"line\">loadConfig(key,val)\t Application.loadConfig(); key:环境配置的关键字;val:环境配置的值。导入json文件来配置环境。</span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"环境<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>getBase()\t Application.getBase(); 获取应用程序的基本路径<br>set(setting, val, attach);\t Application.set()","link":"","raw":null,"photos":[],"categories":[{"name":"服务端框架","slug":"服务端框架","count":1,"path":"api/categories/服务端框架.json"}],"tags":[{"name":"node.js","slug":"node-js","count":3,"path":"api/tags/node-js.json"}]},{"title":"node笔记","slug":"node笔记","date":"2018-08-21T09:04:37.000Z","updated":"2020-04-07T03:13:02.450Z","comments":true,"path":"api/articles/node笔记.json","excerpt":"<p>第一章 node简介<br>1.1 node的特点<br>    1.1.1 异步I/O 绝大多数操作以异步方式进行调用<br>    1.1.2 事件与回调函数<br>    1.1.3 单线程，但是可以用WebWorkers的方式解决单线程的问题（子进程），用Master-Worker用master统一管理子进程<br>    1.1.4 跨平台<br>    1.1.5 c++速度大约是node的2.5倍</p>\n<p>1.2 模块机制<br>    1.2.1 分为核心模块和文件模块，require没带路径的为核心模块，直接加载进内存，带路径的为文件模块,核心模块中有c++和javascript两部分，其中buffer、crypto、evals、fs、os、等都是c++部分的<br>    1.2.2 npm安装的核心模块插件在package.json中定义</p>\n<p>1.3 异步I/O<br>    1.3.1 操作系统内核对I/O只有：阻塞I/O和非阻塞I/O，node中的异步I/O模型由事件循环、观察者、请求对象、I/O线程池<br>    整个系统可以理解为事件循环相当于厨子，不停的询问是否有新的订单，观察者相当于收银员，收到用户的订单将订单分给厨子，而订单相当于请求对象，参数、方法、回调函数斗封装在请求对象中,<br>    以上是异步I/O的第一步，io线程池相当于放订单的桌子，  请求对象-&gt;I/O线程池-&gt;观察者-&gt;事件循环<br>    1.3.2 非异步的I/O主要是setTimeout(),setInterval(),setImmediate(),process.nextTick()</p>","keywords":null,"cover":null,"content":null,"text":"第一章 node简介<br>1.1 node的特点<br>    1.1.1 异步I/O 绝大多数操作以异步方式进行调用<br>    1.1.2 事件与回调函数<br>    1.1.3 单线程，但是可以用WebWorkers的方式解决单线程的问题（子进程），用Master-W","link":"","raw":null,"photos":[],"categories":[{"name":"开发语言","slug":"开发语言","count":1,"path":"api/categories/开发语言.json"}],"tags":[{"name":"node.js","slug":"node-js","count":3,"path":"api/tags/node-js.json"}]},{"title":"翻译提取替换","slug":"翻译提取替换","date":"2018-08-03T03:02:18.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/翻译提取替换.json","excerpt":"<ol>\n<li>提取<br>提取客户端资源文件之前先要用uc-utf8.php转utf-8 把unicode码转成utf-8的日文在提取<br>将要提取文字的文件整合与getFromHtml.sh 放在同目录下<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#sh getFromHtml.sh under the template fold</span></span><br><span class=\"line\"><span class=\"comment\">#Change filelist.csv to excel file, and give it to translator</span></span><br><span class=\"line\"></span><br><span class=\"line\">LANG=C grep -r -n -v <span class=\"string\">'^[[:cntrl:][:print:]]*$'</span> . | grep -v <span class=\"string\">\"using UnityEngine;\"</span> | grep -v svn | grep -v //  | grep -v \\* |  grep -v <span class=\"string\">\"\\&#123;\\*\"</span> |  grep -v <span class=\"string\">\"\\\"Name\\\"\"</span> &gt; ~/lj_2_3_server.csv</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i <span class=\"string\">'s@\\t@ @g'</span> ~/lj_2_3_server.csv</span><br><span class=\"line\">sed -i <span class=\"string\">'s@\\([^:]*\\):\\([0-9]*\\):@\\1\\t\\2\\t@'</span> ~/lj_2_3_server.csv</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"/download/getFromHtml.sh\">点击下载</a><br>","keywords":null,"cover":"A46180F494E722BBE7AB60D25E81DD0B.jpg","content":null,"text":"提取<br>提取客户端资源文件之前先要用uc-utf8.php转utf-8 把unicode码转成utf-8的日文在提取<br>将要提取文字的文件整合与getFromHtml.sh 放在同目录下1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>#!/","link":"","raw":null,"photos":[],"categories":[{"name":"脚本工具","slug":"脚本工具","count":1,"path":"api/categories/脚本工具.json"}],"tags":[]},{"title":"redis笔记","slug":"redis笔记","date":"2018-08-01T08:52:31.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/redis笔记.json","excerpt":"<ol>\n<li><p>Redis是什么、特点、优势<br>redis是Key-Value数据库,数据包含各种数据 字符串String、字典Hash、列表List、集合Set、有序集合SortedSet等<br>redis支持数据持久化，重启再次加载,支持数据备份(支持分布式),Redis是单进程单线程的<br>Redis的优势<br>性能高 读速度110000/s 写速度81000/s<br>丰富的数据类型</p>\n</li>\n<li><p>redis安装（Linux）、启动、退出、设置密码、远程连接<br>2.1 安装redis<br>下载redis安装包（如：redis-2.8.17.tar.gz）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf redis-2.8.17.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> redis-2.8.17</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>2.2 后台启动服务端<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup redis-server &amp;</span><br></pre></td></tr></table></figure></p>\n<p>2.3 启动客户端、验证<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\">redis-cli</span><br><span class=\"line\"><span class=\"built_in\">set</span> var <span class=\"string\">\"hello world\"</span></span><br><span class=\"line\">get var</span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":null,"content":null,"text":"Redis是什么、特点、优势<br>redis是Key-Value数据库,数据包含各种数据 字符串String、字典Hash、列表List、集合Set、有序集合SortedSet等<br>redis支持数据持久化，重启再次加载,支持数据备份(支持分布式),Redis是单进程单线程","link":"","raw":null,"photos":[],"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}]},{"title":"项目各种配置文件","slug":"项目各种配置文件","date":"2018-07-31T08:43:21.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/项目各种配置文件.json","excerpt":"<ol>\n<li>srpg.conf<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    listen 443 ssl;</span><br><span class=\"line\"><span class=\"comment\">#    server_name alctwobt.ssl.91dena.cn;</span></span><br><span class=\"line\">    server_name alccn2-release.ssl.91dena.cn;</span><br><span class=\"line\"><span class=\"comment\">#    ssl on;</span></span><br><span class=\"line\">    ssl_certificate /root/cert/91dena_cn.pem;</span><br><span class=\"line\">    ssl_certificate_key /root/cert/91dena_cn.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    proxy_set_header Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">## APP  11</span></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        <span class=\"comment\"># proxy</span></span><br><span class=\"line\">        proxy_pass http://127.0.0.1:5000/;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"comment\"># connect to backend with keepalives</span></span><br><span class=\"line\"></span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">        proxy_set_header Connection <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        proxy_send_timeout 30s;</span><br><span class=\"line\">        proxy_read_timeout 60s;</span><br><span class=\"line\">        proxy_connect_timeout 30s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    access_log  /home/<span class=\"built_in\">log</span>/nginxlog/cnrelease/alccn2.ssl.91dena.cn.access.log main;</span><br><span class=\"line\">    error_log   /home/<span class=\"built_in\">log</span>/nginxlog/cnrelease/alccn2.ssl.91dena.cn.error.log;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a href=\"/download/nginx.conf\">点击下载</a><br>","keywords":null,"cover":null,"content":null,"text":"srpg.conf1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"},{"name":"td-agent","slug":"td-agent","count":1,"path":"api/tags/td-agent.json"}]},{"title":"ALC_Sentry","slug":"ALC-Sentry","date":"2018-07-24T08:06:55.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/ALC-Sentry.json","excerpt":"<p>1) 安装环境<br>执行命令创建名为sentry的数据库<br>createdb -E utf-8 sentry<br>为sentry项目初始化数据<br>sentry –config=~/.sentry/sentry.conf.py upgrade<br>创建新用户<br>sentry –config=~/.sentry/sentry.conf.py createuser<br>然后就可以启动服务了<br>sentry –config=~/.sentry/sentry.conf.py start<br>另外，还需要启动Worker<br>sentry –config=~/.sentry/sentry.conf.py celery worker -B<br>假设web服务器端口是9000，那么访问localhost:9000就能开始使用sentry了！</p>\n<p>source /usr/local/vir-sentry/bin/activate<br>sentry –config=~/.sentry/sentry.conf.py start &gt;&gt; /usr/local/vir-sentry/logs/sentry.log 2&gt;&amp;1 &amp;<br>","keywords":null,"cover":"9E26651338B7EE1345DAFDEF0ADDB9C4.jpg","content":null,"text":"1) 安装环境<br>执行命令创建名为sentry的数据库<br>createdb -E utf-8 sentry<br>为sentry项目初始化数据<br>sentry –config=~/.sentry/sentry.conf.py upgrade<br>创建新用户<br>s","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"Sentry","slug":"Sentry","count":1,"path":"api/tags/Sentry.json"}]},{"title":"alchemist_manage服务器部署","slug":"alchemist-manage服务器部署","date":"2018-07-11T08:55:25.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/alchemist-manage服务器部署.json","excerpt":"<ol>\n<li>manage服务器代码上传<br>copy srpg_too 目录到 /var/webapps/alchemist_mnt    (文件所有者必须为webapp)</li>\n<li>ruby运行环境构建<br>2.1 检查依赖<br>-ruby(v2.2.2p95~)<br>-gem bundle<br>-Node.js<br>-npm<br>-bower<br>-msyql<br>-redis<br>2.1 设置gem源为淘宝源<br>Gemfile （描述gem之间依赖文件）需要如下修改<br>source ‘<a href=\"https://gems.ruby-china.org/&#39;\" target=\"_blank\" rel=\"noopener\">https://gems.ruby-china.org/&#39;</a><br>2.2  安装gem file<br>su  - webapp<br>bundle install<br>2.2.1 安装bundle 命令不存在，。<br>gem install bundle<br>2.2.2 提示gem命令不存在，就执行rbenv global 2.2.2， 如果无法运行就重新安装ruby 2.2.2 版本，流程如下<br>su - webapp<br>git clone <a href=\"https://github.com/rbenv/rbenv.git\" target=\"_blank\" rel=\"noopener\">https://github.com/rbenv/rbenv.git</a> ~/.rbenv<br>cd ~/.rbenv &amp;&amp; src/configure &amp;&amp; make -C src<br>echo ‘export PATH=”$HOME/.rbenv/bin:$PATH”‘ &gt;&gt; ~/.bash_profile<br>~/.rbenv/bin/rbenv init<br>echo ‘eval “$(rbenv init -)”‘ &gt;&gt; ~/.bash_profile<br>source ~/.bash_profile<br>git clone <a href=\"https://github.com/rbenv/ruby-build.git\" target=\"_blank\" rel=\"noopener\">https://github.com/rbenv/ruby-build.git</a> ~/.rbenv/plugins/ruby-build<br>rbenv install 2.2.2<br>rbenv global 2.2.2<br>ruby -v","keywords":null,"cover":"AADD68F1E0BFC2CE65796C5F7EEBD67E.jpg","content":null,"text":"manage服务器代码上传<br>copy srpg_too 目录到 /var/webapps/alchemist_mnt    (文件所有者必须为webapp)ruby运行环境构建<br>2.1 检查依赖<br>-ruby(v2.2.2p95~)<br>-gem bundle<","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"Ruby on Rails","slug":"Ruby-on-Rails","count":1,"path":"api/tags/Ruby-on-Rails.json"},{"name":"Capistrano 自动部署工具","slug":"Capistrano-自动部署工具","count":1,"path":"api/tags/Capistrano-自动部署工具.json"}]},{"title":"hexo 常用笔记","slug":"hexo-安装遇到的问题","date":"2018-07-03T09:39:12.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/hexo-安装遇到的问题.json","excerpt":"","keywords":null,"cover":null,"content":"<p>建站的过程网上一大把就不记录了，主要写下遇到的几个问题</p>\n<ol>\n<li>github上的项目名称一定要和自己在github上的用户名一致，否则会生成静态文件后点开会白屏</li>\n<li>多看看官方手册上面有详细记录<a href=\"https://hexo.io/zh-cn/docs\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs</a></li>\n</ol>\n<p>hexo g -d<br>hexo clean<br>hexo s<br>hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件,再运行hexo n “xxxx”来生成md博文</p>\n","text":"建站的过程网上一大把就不记录了，主要写下遇到的几个问题github上的项目名称一定要和自己在github上的用户名一致，否则会生成静态文件后点开会白屏多看看官方手册上面有详细记录https://hexo.io/zh-cn/docshexo g -d<br>hexo clean<b","link":"","raw":null,"photos":[],"categories":[{"name":"开发环境安装","slug":"开发环境安装","count":4,"path":"api/categories/开发环境安装.json"}],"tags":[{"name":"node.js","slug":"node-js","count":3,"path":"api/tags/node-js.json"},{"name":"hexo","slug":"hexo","count":1,"path":"api/tags/hexo.json"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-01T08:06:55.000Z","updated":"2020-03-06T10:34:09.815Z","comments":true,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}