{"title":"Mysql笔记","slug":"Mysql笔记","date":"2018-10-31T07:04:42.000Z","updated":"2020-06-21T08:14:59.952Z","comments":true,"path":"api/articles/Mysql笔记.json","photos":[],"link":"","excerpt":"第1章 SQL基础<br>1.数据分为DDL(数据定义语言)，DML(数据操纵语言)，DCL(数据控制语言)<br>    1.1 DDL语句<br>    1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>mysql -uroot -p<br>create database test1;<br>use test1;<br>show tables;   \t\t\t\t\t\t\t\t#查看所有表<br>drop database test1;<br>create table emp(ename varchar(10),hiredate date,sal decimal(2,10),deptno int(2));<br>desc emp;\t\t\t\t\t\t\t\t\t#查看表信息<br>show create table emp \\G;\t\t\t\t\t#\\G使得记录能够按照字段竖向排列 以便显示更长内容<br>drop table emp;<br>alter table emp modify ename varchar(20);\t#修改表字段<br>alter table emp add column age int(3);\t\t#添加字段<br>alter table emp drop colum age\t\t\t\t#删除字段<br>alter table emp change age age123 int(4);\t#字段改名同时修改类型<br>alter table emp add birth date after ename;\t#修改字段排列顺序<br>alter table emp rename emp1;<br>","covers":null,"content":"<p>第1章 SQL基础<br>1.数据分为DDL(数据定义语言)，DML(数据操纵语言)，DCL(数据控制语言)<br>    1.1 DDL语句<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">create database test1;</span><br><span class=\"line\">use test1;</span><br><span class=\"line\">show tables;   \t\t\t\t\t\t\t\t<span class=\"comment\">#查看所有表</span></span><br><span class=\"line\">drop database test1;</span><br><span class=\"line\">create table emp(ename varchar(10),hiredate date,sal decimal(2,10),deptno int(2));</span><br><span class=\"line\">desc emp;\t\t\t\t\t\t\t\t\t<span class=\"comment\">#查看表信息</span></span><br><span class=\"line\">show create table emp \\G;\t\t\t\t\t<span class=\"comment\">#\\G使得记录能够按照字段竖向排列 以便显示更长内容</span></span><br><span class=\"line\">drop table emp;</span><br><span class=\"line\">alter table emp modify ename varchar(20);\t<span class=\"comment\">#修改表字段</span></span><br><span class=\"line\">alter table emp add column age int(3);\t\t<span class=\"comment\">#添加字段</span></span><br><span class=\"line\">alter table emp drop colum age\t\t\t\t<span class=\"comment\">#删除字段</span></span><br><span class=\"line\">alter table emp change age age123 int(4);\t<span class=\"comment\">#字段改名同时修改类型</span></span><br><span class=\"line\">alter table emp add birth date after ename;\t<span class=\"comment\">#修改字段排列顺序</span></span><br><span class=\"line\">alter table emp rename emp1;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<pre><code>1.2 DML语句 增删改查\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert into emp (ename,sal) values(<span class=\"string\">'dony'</span>,1000);</span><br><span class=\"line\">delete from emp <span class=\"built_in\">where</span> ename = <span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">select distinct age from emp1;\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">#查询的内容去重</span></span><br><span class=\"line\">select * from emp order by age,deptno desc;\t\t\t\t\t\t\t\t\t<span class=\"comment\">#根据某个字段排序</span></span><br><span class=\"line\">\tselect age,count(1) from emp group by age with rollup;\t\t\t\t\t\t<span class=\"comment\">#分类统计计数及总数</span></span><br><span class=\"line\">\tselect age,count(1) from emp group by age having count(1)&gt;1;</span><br><span class=\"line\">\tselect ename,deptname from emp,dept <span class=\"built_in\">where</span> emp.age = dept.age;\t\t\t\t<span class=\"comment\">#联查,内链接</span></span><br><span class=\"line\">\tselect ename,deptname from emp left jion dept on emp.deptno = dept.deptno;\t<span class=\"comment\">#表链接很多情况下优于子查询</span></span><br><span class=\"line\">\tselect * from dept union all select * from emp;\t\t\t\t\t\t\t\t<span class=\"comment\">#集合显示不去重</span></span><br><span class=\"line\">\tselect * from dept union select * from emp;\t\t\t\t\t\t\t\t\t<span class=\"comment\">#集合显示去重</span></span><br></pre></td></tr></table></figure>\n\nYou can&apos;t specify target table &apos; for update in FROM clause\nMysql不让对查询到的目标语句进行更新\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DELETE FROM playeritems WHERE id IN(SELECT mid FROM (SELECT min(id) as mid FROM playeritems WHERE uid = <span class=\"string\">'1300200112870961'</span> GROUP BY iname HAVING count(iname) &gt; 1 )as tmp);</span><br></pre></td></tr></table></figure>\n\n1.3 DCL语句\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant select,insert on sakila.* to <span class=\"string\">'z1@localhost'</span> identified by <span class=\"string\">'123'</span>; \t\t<span class=\"comment\">#赋予用户权限</span></span><br><span class=\"line\">revoke insert on sakila.* from <span class=\"string\">'z1@localhost'</span>;\t\t\t\t\t\t\t\t<span class=\"comment\">#回收权限</span></span><br></pre></td></tr></table></figure>\n</code></pre><p>2.常用函数<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select NOW();\t\t\t\t\t\t\t\t\t<span class=\"comment\">#xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">select UNIX_TIMESTAMP(now());\t\t\t\t\t<span class=\"comment\">#时间戳</span></span><br><span class=\"line\">select FROM_UNIXTIME(时间戳);\t\t\t\t\t<span class=\"comment\">#xxxx-xx-xx xx:xx:xx</span></span><br><span class=\"line\">IF(value,t,f)\t\t\t\t\t\t\t\t\t<span class=\"comment\">#如果value为真，返回t,否则返回f</span></span><br><span class=\"line\">select <span class=\"keyword\">if</span>(a &gt; 2000, <span class=\"string\">'high'</span>,<span class=\"string\">'low'</span>) from B</span><br><span class=\"line\">IFNULL(value1,value2)\t\t\t\t\t\t\t<span class=\"comment\">#如果value1不为空，返回value1,否则返回value2</span></span><br><span class=\"line\">select ifnull(a , 0) from B</span><br><span class=\"line\">CASE WHEN value THEN res1 ... ELSE def END\t\t<span class=\"comment\">#如果value1真，返回res1,否则返回def</span></span><br><span class=\"line\">select <span class=\"keyword\">case</span> when a&lt;2000 <span class=\"keyword\">then</span> <span class=\"string\">'low'</span> <span class=\"keyword\">else</span> <span class=\"string\">'high'</span> end from B</span><br><span class=\"line\">CASE exp WHEN value THEN res1 ... ELSE def END\t<span class=\"comment\">#如果exp = value1真，返回res1,否则返回def</span></span><br><span class=\"line\">select <span class=\"keyword\">case</span> a when 1000 <span class=\"keyword\">then</span> <span class=\"string\">'low'</span> when 2000 <span class=\"keyword\">then</span> <span class=\"string\">'mid'</span> <span class=\"keyword\">else</span> <span class=\"string\">'high'</span> end from B</span><br></pre></td></tr></table></figure></p>\n<p>第2章 存储引擎<br>1.mysql的存储引擎有好多种，这边记录2种<br>    1.1 MyISAM 不支持事务、不支持外键、速度快、表锁<br>    1.2 InnoDB 支持提交、回滚、奔溃恢复能力的事务安全，行锁</p>\n<p>2.myssql事务<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start transaction;</span><br><span class=\"line\">sql 操作</span><br><span class=\"line\">commit and chain;</span><br></pre></td></tr></table></figure></p>\n<p>3.防止sql注入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$re</span> = <span class=\"string\">\"/(|\\'|(\\%27)|\\;|(\\%3b)|\\=|(\\%3d)|\\(|(\\%28)|\\)|(\\%29)|(\\/*) |(\\%2f%2a)|(\\ */)|(\\%2a%2f)|\\+|(\\%2b)|\\&lt;|(\\%3c)|\\&gt;|(\\%3e)|\\(--))|\\[|\\%5b|\\]|\\%5d)/\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"variable\">$re</span>, <span class=\"variable\">$aa</span>) &gt;0)&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span>(<span class=\"string\">\"参数不对\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.SQL MODE<br>ANSI 使语法行为更符合sql<br>STRICT_TRANS_TABLES 试用于事务，严格模式，报错不警告,不允许非法日期<br>TRADITIONAL 严格模式，适用于事务非事务，不警告直接报错</p>\n<p>5.sql分区<br>RANGE分区：基于一个给定连续区间范围，把数据分配到不同分区<br>LIST分区：类似RANGE<br>HASH分区：基于给定的分区个数，把数据分配到不同分区<br>KEY分区：类似于HASH分区<br>RANGE\\LIST\\HASH分区键必须INT型</p>\n<p>好处4点<br>存储更多数据、优化查询、快速删除数据、获得更大查询吞吐量<br>Range分区利用取值范围将数据分成分区<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE emp(</span><br><span class=\"line\">id INT NOT NULL,</span><br><span class=\"line\">NAME VARCHAR(20),</span><br><span class=\"line\">age INT</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITION BY RANGE(ID)(</span><br><span class=\"line\">PARTITION p0 VALUES LESS THAN (6),</span><br><span class=\"line\">PARTITION p1 VALUES LESS THAN (11),</span><br><span class=\"line\">PARTITION pmax VALUES LESS THAN maxvalue</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>LIST分区是建立离散的之列表告诉数据库特定值在哪个分区<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE expense(</span><br><span class=\"line\">expense_date DATE NOT NULL,</span><br><span class=\"line\">category INT,</span><br><span class=\"line\">amount DECIMAL (10,3)</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITION BY LIST(category)(</span><br><span class=\"line\">PARTITION p0 VALUES IN(3,5),<span class=\"comment\">#可字符串在5.5版本后</span></span><br><span class=\"line\">PARTITION p1 VALUES IN(1,10),</span><br><span class=\"line\">PARTITION p2 VALUES IN(4,9),</span><br><span class=\"line\">PARTITION p3 VALUES IN(2),</span><br><span class=\"line\">PARTITION p4 VALUES IN(6)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>Columns分区可分为 RANGE Columns和LIST Columns分区都支持int\\date\\string,还支持多列<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE expense(</span><br><span class=\"line\">a INT,</span><br><span class=\"line\">b INT</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITION BY RANGE COLUMS(a,b)(</span><br><span class=\"line\">PARTITION p0 VALUES IN(0,10),<span class=\"comment\">#可字符串在5.5版本后</span></span><br><span class=\"line\">PARTITION p1 VALUES IN(10,10),</span><br><span class=\"line\">PARTITION p2 VALUES IN(10,29)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>HASH分区用来分散热点读，确保数据在预留分区平均分布，有常规分区和线性分区<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#常规 平衡不方便</span></span><br><span class=\"line\">CREATE TABLE emp(</span><br><span class=\"line\">id INT NOT NULL,</span><br><span class=\"line\">NAME VARCHAR(20),</span><br><span class=\"line\">age INT</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITION BY HASH(ID) PARTITIONS 4;</span><br><span class=\"line\"><span class=\"comment\">#线性 快速不平衡</span></span><br><span class=\"line\">CREATE TABLE emp(</span><br><span class=\"line\">id INT NOT NULL,</span><br><span class=\"line\">NAME VARCHAR(20),</span><br><span class=\"line\">age INT</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITION BY LINEAR HASH(ID) PARTITIONS 4;</span><br></pre></td></tr></table></figure></p>\n<p>key分区<br>类似HASH分区，数据类型除TEXThe BLOB以外都可以</p>\n<p>RANGE&amp;LIST 分区管理 分区被删除了分区中的数据也被删除了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table xxx drop partition p2; <span class=\"comment\">#删</span></span><br><span class=\"line\">alter table xxx add partition (partiton p5 values less than (2025)) <span class=\"comment\">#增  不能添加一个包含现有分区值列表中的任意值分区</span></span><br><span class=\"line\">alter table xxx reorganize partition p3 into (</span><br><span class=\"line\">\tpartition p2 values less than (2005),</span><br><span class=\"line\">\tpartition p3 values less than (2015)</span><br><span class=\"line\">);\t\t\t<span class=\"comment\">#拆分</span></span><br><span class=\"line\">alter table xxx reorganize partition p1,p2,p3 into (</span><br><span class=\"line\">\tpartition p1 values less than (2015)</span><br><span class=\"line\">);\t\t<span class=\"comment\">#合并</span></span><br></pre></td></tr></table></figure></p>\n<p>HASH&amp;KEY 分区管理<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table xxx coalesce partition 2; <span class=\"comment\">#原4删2</span></span><br><span class=\"line\">alter table xxx coalesce partition 8; <span class=\"comment\">#原4加8</span></span><br></pre></td></tr></table></figure></p>\n<p>6.SQL优化</p>\n<ol>\n<li>通过慢查询日志定位效率低的sql,在查询过程中出现的情况可以用show processlist命令查看mysql进程，看锁表及进程状态</li>\n<li>将慢的sql提取做explain分析，type的性能如下<br> ALL,全表扫瞄<br> index,索引全扫描<br> range,索引范围扫描 常见&lt;\\&lt;=>>=\\between<br> ref,使用非唯一索引扫描或者唯一索引前缀扫描（联合索引）<br> eq_ref,使用唯一索引<br> const/system,单表中最多有一个匹配行<br> NULL，不查表直接得到结果<br> 自上而下效率越来越高</li>\n<li>通过show profile分析sql<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select @@have_profiling;\t<span class=\"comment\">#查询是否支持</span></span><br><span class=\"line\">select @@profiling;\t\t<span class=\"comment\">#查询是否开启</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> profiling=1;\t\t<span class=\"comment\">#开启</span></span><br><span class=\"line\">show profiles;\t\t\t<span class=\"comment\">#显示sql的执行排列</span></span><br><span class=\"line\">show profile <span class=\"keyword\">for</span> query 4;\t<span class=\"comment\">#查找具体某一条的状态</span></span><br><span class=\"line\">show profile cpu <span class=\"keyword\">for</span> query 4;\t<span class=\"comment\">#查询莫一条在具体（all\\cpu\\block io\\context\\switch\\page faults）</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>mac或者linux当mysql连接不上的时候加<br>ALTER USER ‘root‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘password’;</p>\n","categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}]}