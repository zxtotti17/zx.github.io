{"name":"游戏","slug":"游戏","count":3,"postlist":[{"title":"游戏全局通知红点系统","slug":"游戏全局通知红点系统","date":"2019-08-23T09:44:00.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/游戏全局通知红点系统.json","excerpt":"","keywords":null,"cover":"Red15669620461084.png","content":"<p>红点功能贯穿游戏所有功能，像是一个全局的通知，用一个配置表记录所有游戏功能及入口和红点、开启的方法名加载进内存<br><img src=\"Red15669620461084.png\" alt=\"Red15669620461084\"><br>主入口界面时候调用<br>取得已开启的功能列表mod_function:get_all_game_function() 构造成带父子关系的功能列表<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;Id,[&#123;GameFunction <span class=\"comment\">#game_function.id&#125;|List1]&#125;</span></span><br><span class=\"line\">|</span><br><span class=\"line\">lists:delete(&#123;Id,List1&#125;,L)</span><br></pre></td></tr></table></figure></p>\n<p>通过核心回调到所有模块的红点方法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IsRed = <span class=\"keyword\">if</span></span><br><span class=\"line\">    Mod =/= <span class=\"string\">''</span>, Func =/= <span class=\"string\">''</span> -&gt;</span><br><span class=\"line\">        try erlang:apply(Mod,Func,[PlayerId]) of</span><br><span class=\"line\">            Result -&gt;</span><br><span class=\"line\">                Result</span><br><span class=\"line\">        catch</span><br><span class=\"line\">            _ : _ -&gt;</span><br><span class=\"line\">                <span class=\"literal\">false</span></span><br><span class=\"line\">        end;</span><br><span class=\"line\">    <span class=\"literal\">true</span> -&gt;</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">end,</span><br></pre></td></tr></table></figure></p>\n<p>最后将缓存中的玩家红点数据替换<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lib_ets:delete(player_red, PlayerId),</span><br><span class=\"line\">    lib_ets:insert(</span><br><span class=\"line\">        player_red,</span><br><span class=\"line\">        <span class=\"comment\">#player_red&#123;</span></span><br><span class=\"line\">            player_id = PlayerId,</span><br><span class=\"line\">            red_list  = N</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        replace</span><br><span class=\"line\">    ),</span><br></pre></td></tr></table></figure></p>\n<p>不同的功能触发红点改变需要有个打点的函数,在功能需要改变红点状态的时候通知进来更新缓存<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notify_game_function_is_red (PlayerId,FunctionId) -&gt;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> mod_function:check_lock(PlayerId,FunctionId) of</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt;</span><br><span class=\"line\">            noop;</span><br><span class=\"line\">        _ -&gt;</span><br><span class=\"line\">            GameFunction = code_db:get(game_function,[FunctionId]),</span><br><span class=\"line\">            Mod   = list_to_atom(GameFunction <span class=\"comment\">#game_function.red_mod),</span></span><br><span class=\"line\">            Func  = list_to_atom(GameFunction <span class=\"comment\">#game_function.red_func),</span></span><br><span class=\"line\">            IsRed = <span class=\"keyword\">if</span></span><br><span class=\"line\">                Mod =/= <span class=\"string\">''</span>, Func =/= <span class=\"string\">''</span> -&gt;</span><br><span class=\"line\">                   try erlang:apply(Mod,Func,[PlayerId]) of</span><br><span class=\"line\">                        Result -&gt;</span><br><span class=\"line\">                            Result</span><br><span class=\"line\">                    catch</span><br><span class=\"line\">                        _ : _ -&gt;</span><br><span class=\"line\">                            <span class=\"literal\">false</span></span><br><span class=\"line\">                    end;</span><br><span class=\"line\">                <span class=\"literal\">true</span> -&gt;</span><br><span class=\"line\">                    <span class=\"literal\">false</span></span><br><span class=\"line\">            end,</span><br><span class=\"line\">            <span class=\"keyword\">if</span></span><br><span class=\"line\">                GameFunction <span class=\"comment\">#game_function.relation &gt; 0 -&gt;</span></span><br><span class=\"line\">                    notify_relation_game_function_is_red(PlayerId,GameFunction <span class=\"comment\">#game_function.relation,FunctionId,IsRed);%通知父类联动的函数</span></span><br><span class=\"line\">                <span class=\"literal\">true</span> -&gt;</span><br><span class=\"line\">                    update_game_function_cache(PlayerId,FunctionId,IsRed)</span><br><span class=\"line\">            end</span><br><span class=\"line\">    end.</span><br></pre></td></tr></table></figure></p>\n","text":"红点功能贯穿游戏所有功能，像是一个全局的通知，用一个配置表记录所有游戏功能及入口和红点、开启的方法名加载进内存<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"游戏","slug":"游戏","count":3,"path":"api/tags/游戏.json"}]},{"title":"游戏中大型自动比赛玩法设计","slug":"游戏中大型比赛玩法设计思路","date":"2019-07-30T08:08:45.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/游戏中大型比赛玩法设计思路.json","excerpt":"<p>争霸赛赛程范例<br>3月1日 0：00~3月3日 12:00    报名    40级以上手动报名<br>3月3日 13：00    淘汰赛    “13:00取数据，提前1小时向玩家发送邮件提醒<br>13:10开始出战报，每隔5分钟出1场战报<br>天榜负5局进入地榜，地榜负5局则被淘汰”<br>3月4日 14:00    16强赛（32进16）    “每小时1局，每局取1次数据，5局3胜制<br>天地榜同时进行<br>比赛开始前1小时向玩家发送邮件提醒取数据制度”<br>3月5日 14:00    16进8<br>3月6日 14:00    8进4<br>3月7日 14:00    半决赛<br>3月8日 14:00    决赛<br>3月8日 决赛全部结束    统一发放奖励    </p>\n<p>比赛的时间控制由单独时间进程来控制时间的推进，相当于php中的crontab,表结构上一个玩家比赛进程表player_race,<br>一个各阶段玩家成员信息表player_race_member，后期系统匹配各阶段玩家匹配信息表player_race_opponent，<br>一个各阶段玩家战报信息表player_race_report，一个各阶段玩家结果表player_race_result，<br>玩家表可以分为  玩家比赛信息表  player_st_jjc_race 玩家匹配信息表 player_st_jjc_race_opponent 玩家日志表 player_st_jjc_race_score_log</p>\n<p>第一步 报名<br>很简单直接报名请求记录玩家数据就行,报名时间结束时触发事件对所有玩家进行匹配<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> try_get_player_server_war(PlayerId) of</span><br><span class=\"line\">    null -&gt;</span><br><span class=\"line\">        Tran = fun() -&gt;</span><br><span class=\"line\">            game_db:write(<span class=\"comment\">#player_server_war &#123;</span></span><br><span class=\"line\">                player_id  = PlayerId, </span><br><span class=\"line\">                apply_time = lib_misc:get_local_timestamp()</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            % mod_deploy:get(PlayerId, ?RACE_SERVER_WAR)</span><br><span class=\"line\">        end, </span><br><span class=\"line\">        game_db:<span class=\"keyword\">do</span>(Tran);</span><br><span class=\"line\">    _ -&gt;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(already_apply)</span><br><span class=\"line\">end.</span><br><span class=\"line\"></span><br><span class=\"line\">% 本服报名结束手机玩家数据</span><br><span class=\"line\">apply_over() -&gt;</span><br><span class=\"line\">    List = get_all_player_server_war(),</span><br><span class=\"line\">    Tran = fun() -&gt;</span><br><span class=\"line\">        lists:foreach(</span><br><span class=\"line\">            fun(Rec) -&gt;</span><br><span class=\"line\">                game_db:write(Rec <span class=\"comment\">#player_server_war &#123;</span></span><br><span class=\"line\">                    race_step = ?RS_TIAN_BANG_TAOTAI</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            end, </span><br><span class=\"line\">            List</span><br><span class=\"line\">        )</span><br><span class=\"line\">    end,</span><br><span class=\"line\">    game_db:<span class=\"keyword\">do</span>(Tran),</span><br><span class=\"line\">    ?INFO(<span class=\"string\">\"apply_over\"</span>,[]),</span><br><span class=\"line\">    ZoneList = lists:foldl(</span><br><span class=\"line\">        fun(PlayerServerWar, R) -&gt;</span><br><span class=\"line\">            [PlayerServerWar <span class=\"comment\">#player_server_war.player_id | R]</span></span><br><span class=\"line\">        end,</span><br><span class=\"line\">        [],</span><br><span class=\"line\">        get_all_player_server_war()</span><br><span class=\"line\">    ),</span><br><span class=\"line\"></span><br><span class=\"line\">    mod_race:init_race_member(</span><br><span class=\"line\">       ?RACE_SERVER_WAR,</span><br><span class=\"line\">       0,</span><br><span class=\"line\">       ?RS_TIAN_BANG_TAOTAI,</span><br><span class=\"line\">       0,</span><br><span class=\"line\">       ZoneList,</span><br><span class=\"line\">       normal</span><br><span class=\"line\">    ).</span><br></pre></td></tr></table></figure></p>\n<p>注意的是用一个单独的进程来管理活动步骤开启结束<br><img src=\"Er15646489002180.png\" alt=\"Er15646489002180\"><br>","keywords":null,"cover":"Er15646489002180.png","content":null,"text":"争霸赛赛程范例<br>3月1日 0：00~3月3日 12:00    报名    40级以上手动报名<br>3月3日 13：00    淘汰赛    “13:00取数据，提前1小时向玩家发送邮件提醒<br>13:10开始出战报，每隔5分钟出1场战报<br>天榜负5局进入地榜，地榜","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"游戏","slug":"游戏","count":3,"path":"api/tags/游戏.json"}]},{"title":"游戏运营活动框架思路","slug":"游戏运营活动框架思路","date":"2019-11-22T08:15:07.000Z","updated":"2019-11-27T15:26:48.000Z","comments":true,"path":"api/articles/游戏运营活动框架思路.json","excerpt":"<p>游戏的运营活动一般会有好多种类型，但是这些类型的功能一般是有共同和非共同的部分，这里记录一个对多类型运营活动的管理框架<br>通过模板表录入运营活动的参数，包括跳转模块，开启方法，红点方法，等级等。如果有类似活动结束发奖的奖励表也可以用表来记录不同活动operation_id对应的奖励<br>进行管理。<br><img src=\"1574411899.jpg\" alt=\"1574411899\"><br>1.初始化玩家排行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init_sky_bless_rank() -&gt;</span><br><span class=\"line\">    List = [PlayerSkyBless || PlayerSkyBless &lt;- get_all_player_st_sky_bless(),</span><br><span class=\"line\">        PlayerSkyBless <span class=\"comment\">#player_st_sky_bless.bless_times &gt; 0],</span></span><br><span class=\"line\">    SortFunction = fun(A,B) -&gt;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>  A <span class=\"comment\">#player_st_sky_bless.bless_times =:= B #player_st_sky_bless.bless_times -&gt;</span></span><br><span class=\"line\">                A <span class=\"comment\">#player_st_sky_bless.last_time =&lt; B #player_st_sky_bless.last_time;</span></span><br><span class=\"line\">            <span class=\"literal\">true</span> -&gt;</span><br><span class=\"line\">                A <span class=\"comment\">#player_st_sky_bless.bless_times &gt; B #player_st_sky_bless.bless_times</span></span><br><span class=\"line\">        end</span><br><span class=\"line\">    end,</span><br><span class=\"line\">    SortList = lists:sort(SortFunction,List),</span><br><span class=\"line\">    Num = length(SortList),</span><br><span class=\"line\">    Tran = fun() -&gt;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>  Num &gt; 0 -&gt;</span><br><span class=\"line\">                lists:foreach(</span><br><span class=\"line\">                    fun(Seq) -&gt;</span><br><span class=\"line\">                        PlayerSkyBless = lists:nth(Seq,SortList),</span><br><span class=\"line\">                        lib_ets:insert(sky_bless_player_ranking,<span class=\"comment\">#sky_lantern_bless_player_ranking&#123;</span></span><br><span class=\"line\">                            player_id = PlayerSkyBless <span class=\"comment\">#player_st_sky_bless.player_id,ranking = Seq&#125;,replace),</span></span><br><span class=\"line\">                        BlessRanking = <span class=\"comment\">#sky_lantern_bless_ranking&#123;</span></span><br><span class=\"line\">                            ranking = Seq,</span><br><span class=\"line\">                            player_id = PlayerSkyBless <span class=\"comment\">#player_st_sky_bless.player_id,</span></span><br><span class=\"line\">                            <span class=\"built_in\">times</span>   = PlayerSkyBless <span class=\"comment\">#player_st_sky_bless.bless_times,</span></span><br><span class=\"line\">                            bless_time = PlayerSkyBless <span class=\"comment\">#player_st_sky_bless.last_time</span></span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        lib_ets:insert(sky_bless_ranking,BlessRanking,replace)</span><br><span class=\"line\">                    end,</span><br><span class=\"line\">                    lists:seq(1,Num)</span><br><span class=\"line\">                );</span><br><span class=\"line\">            <span class=\"literal\">true</span> -&gt;</span><br><span class=\"line\">                noop</span><br><span class=\"line\">        end</span><br><span class=\"line\">    end,</span><br><span class=\"line\">    game_db:<span class=\"keyword\">do</span>(Tran).</span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":"1574411899.jpg","content":null,"text":"游戏的运营活动一般会有好多种类型，但是这些类型的功能一般是有共同和非共同的部分，这里记录一个对多类型运营活动的管理框架<br>通过模板表录入运营活动的参数，包括跳转模块，开启方法，红点方法，等级等。如果有类似活动结束发奖的奖励表也可以用表来记录不同活动operation_id对应","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"游戏","slug":"游戏","count":3,"path":"api/tags/游戏.json"}]}]}